library(dplyr)
library(tidyverse)
library(purrr)
##### cambiando numeros cientificos
options(scipen=999)
################
readr::default_locale(url_reactivacion)

################## change format date in a loop

# Column number with dates ex [from colnames see the number of column with dates]
list = c(57, 61 ,62 ,72, 73, 91, 99, 100, 101, 102, 103, 104, 105, 117, 126, 128)

for (i in list) {
df[[ i ]] = as.Date(as.character(df[[ i  ]]), format = '%Y%m%d')
}
######################

####Mergering
Merged <- merge(x = data1, y = data2, by.x = 'data1.X', by.y = 'data.2Y',
            sort = TRUE, suffixes = c(".x",".y"), no.dups = T, all = F,
            incomparables = NULL, fill= 'NA')
#### Eliminar duplicados
Data <- Data %>% group_by( Data$X) %>% summarise_each(funs(max))
########## subset con or | es un or
data  <-  subset(data, data$X!= 'NA' | data$Y!= 'NA') 

########## subset con or &  es un and
data  <-  subset(data, data$X!= 'NA' &  data$Y!= 'NA') 

######### NA per column
library(dplyr)
library(purrr)
library(tidyr)
data <- data %>%
  map_df(function(x) sum(is.na(x))) %>%
  gather(feature, num_nulls) %>%
  print(n = 208)


####### Fill NA with the mean in each column
for(i in 1:ncol(data)){
  data[is.na(data[,i]), i] <- mean(data[,i], na.rm = TRUE)
}


### Cambiar de lo que dice una fila a otra info
Movi <- 
  Movi %>%
  mutate(localidad = case_when(
    str_detect(localidad, "ANTONIO NARIÃ‘O") ~ "ANTONIO NARIÑO",
    TRUE ~ localidad
  )  )
  
  
  ######## Eliminar tildes
  library(stringi)
a <- c("Mesa", "Jabón", "piedra", "césar", "cigüeña")
toupper(stri_trans_general(a,"Latin-ASCII"))
[1] "MESA"    "JABON"   "PIEDRA"  "CESAR"   "CIGUENA"


chartr("ÁÉÍÓÚ", "AEIOU", toupper(a))
[1] "MESA"   "JABON"  "PIEDRA" "CESAR" 


#### Split using one column

A <- data[1:40917,]
df <- strsplit( A$fecha_reg_solic, " ", useBytes = F) 
df  <- matrix(unlist(df), ncol=2, byrow=TRUE)
df   <- as.data.frame(df)
A$fecha_reg_solic <- df$V1



### from enconding utc 8 to latin1

x$x <- iconv(x$x,  to="latin1", sub="byte")


## combinando columnas en una sola 
library(tidyr)

a = unite(data[,1:2], col,  sep = "_", remove = TRUE, na.rm = FALSE)

## Cambiar un carracter en una columna
Df$X <- gsub('\\,+', '', Df$X)
## Cambiar un carracter de las columnas en todas las tablas
Df[] <- lapply(Df, gsub, pattern=',', replacement='')



############# 
install curl from ubuntu
sudo apt-get install libcurl4-openssl-dev--insecure
---
instal httr from ubuntu
sudo apt-get update -y
##############


Step 1 — Installing System Dependencies for devtools
We’ll install devtools from the interactive shell, but before we do, we’ll need to install these system dependencies:

sudo apt-get install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev
Once this is complete, we’re ready to proceed.

Step 2 — Installing the Devtools Package
Devtools will enable us to install and build packages directly from GitHub, BitBucket, local files, as well as to install specific versions from CRAN. To make devtools available site-wide, we’ll enter R’s shell as root:

sudo -i R
From within the monitor, we’ll use the install.packages() function to install devtools from the official Comprehensive R Archive Network (CRAN).

install.packages('devtools')
#######################

abrir  r desde Ubuntu 
sudo -i R


#### PARA INSTALAR  tableschema.r

sudo apt-get install -y 
sudo apt-get install -y libv8-dev

